generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL_UNPOOLED")
}


model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  firstName String
  lastName  String
  orders    Order[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
  image    String
}

model Product {
  id          Int              @id @default(autoincrement())
  title       String
  description String
  price       Int
  categoryId  Int
  category    Category         @relation(fields: [categoryId], references: [id])
  images      ProductImage[]
  variants    ProductVariant[]
  orderItems  OrderItem[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model ProductVariant {
  id         Int         @id @default(autoincrement())
  size       String
  quantity   Int
  productId  Int
  product    Product     @relation(fields: [productId], references: [id])
  orderItems OrderItem[]
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  createdAt DateTime    @default(now())
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  variantId Int?
  quantity  Int
  price     Int
  size      String?

  order   Order           @relation(fields: [orderId], references: [id])
  product Product         @relation(fields: [productId], references: [id])
  variant ProductVariant? @relation(fields: [variantId], references: [id])
}
